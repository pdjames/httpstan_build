name: httpstan

on: [push, pull_request]

jobs:
  tests:
    name: httpstan tests
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        pyvers: ["3.10", "3.11"]
        runner: [ ubuntu-latest, windows-latest]
#        runner: [macos-latest-xlarge, ubuntu-latest, windows-latest]
        include:
#          - runner: macos-latest-xlarge
#            stancarch: mac
##            buildcmd: unix

          - runner: windows-latest
            stancarch: windows
#            buildcmd: msbuild

          - runner: ubuntu-latest
            stancarch: linux
#            buildcmd: unix

#          - runner: <<ubuntu-22.04-raspberrypi-placeholder>>
#            stancarch: linux-arm64
        exclude:
          - runner: macos-latest-xlarge
            pyvers: "3.9"
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.pyvers }}

      - name: Install poetry
        run: pip install "poetry~=1.2"

      - name: Unix Build libraries used by Stan
        env:
          STANC_ARCH: ${{ matrix.stancarch }}
        run: make -j2
        if: ${{ matrix.runner == 'ubuntu-latest' || matrix.runner == 'macos-latest-xlarge' }}

      - name: Windows Build libraries used by Stan
        env:
          STANC_ARCH: ${{ matrix.stancarch }}
          MINGW_PACKAGE_PREFIX: "mingw-w64-ucrt-x86_64-"
          MSYSTEM: UCRT64
        run: |
          choco install -y --no-progress msys2
          sh -l -c "/usr/bin/pacman --noconfirm -S --needed base-devel ${MINGW_PACKAGE_PREFIX}-toolchain ${MINGW_PACKAGE_PREFIX}-gcc ${MINGW_PACKAGE_PREFIX}-libevent ${MINGW_PACKAGE_PREFIX}-openssl ${MINGW_PACKAGE_PREFIX}-postgresql autoconf automake libtool python zip"
          sh -l -c "make -j2"
        if: ${{ matrix.runner == 'windows-latest' }}
#            choco install -y --no-progress pandoc
#            sh -l -c "./autogen.sh"
#            sh -l -c "./configure --prefix=$HOME/install --enable-werror PANDOC=/c/programdata/chocolatey/bin/pandoc LDFLAGS=-static LIBS=-liphlpapi PKG_CONFIG='pkg-config --static'"

      # export test dependencies from pyproject.toml, install them
      - name: Install dependencies
        run: |
          poetry export -f requirements.txt --without-hashes --with dev -o requirements.txt \
          && pip install -r requirements.txt

      - name: Check code
        run: scripts/check

      - name: Build and Install wheel
        run: |
          poetry build -v
          python -m pip install dist/*.whl

      - name: Run tests
        run: python -m pytest -s -v tests

      - name: Test PyStan compatibility
        run: |
          pip install --pre pystan
          python -c'import stan;assert stan.build("parameters {real y;} model {y ~ normal(0,1);}").sample()["y"] is not None'
